#include <fcntl.h>  // Inclui as definições para open e suas flags 
#include <unistd.h> // Inclui as definições para read, write e close 
#include <stdio.h>  // Inclui as definições para perror
#include <stdlib.h>

#define BUFFER_SIZE 128

int main() {
    // Nome dos arquivos de origem e destino
    const char *arquivo_origem = "lab2_ex3_origem.txt";
    const char *arquivo_destino = "lab2_ex3_destino.txt";

    // Descritores dos arquivos
    int fd_origem, fd_destino;
    char buffer[BUFFER_SIZE];
    ssize_t bytes_read, bytes_written;

    // Abrindo o arquivo de origem
    fd_origem = open(arquivo_origem, O_RDONLY);
    if (fd_origem < 0) {
        perror("Não foi possível abrir o arquivo de origem");
        return EXIT_FAILURE;
    }

    // Abrindo ou criando o arquivo de destino
    fd_destino = open(arquivo_destino, O_WRONLY | O_CREAT | O_TRUNC, 0644);
    if (fd_destino < 0) {
        perror("Não foi possível abrir ou criar o arquivo de destino");
        close(fd_origem);
        return EXIT_FAILURE;
    }

    // Lendo o conteúdo do arquivo de origem e escrevendo no arquivo de destino
    while ((bytes_read = read(fd_origem, buffer, BUFFER_SIZE)) > 0) {
        bytes_written = write(fd_destino, buffer, bytes_read);
        if (bytes_written != bytes_read) {
            perror("Erro ao escrever no arquivo de destino");
            close(fd_origem);
            close(fd_destino);
            return EXIT_FAILURE;
        }
    }

    if (bytes_read < 0) {
        perror("Erro ao ler o arquivo de origem");
    }

    // Fechando os arquivos
    close(fd_origem);
    close(fd_destino);

    return 0;
}
